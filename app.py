import streamlit as st

# --- CONFIGURA√á√ÉO DA P√ÅGINA ---
st.set_page_config(
    layout="wide",
    page_title="INTERVEN√á√ÉO IA",
    page_icon="üß†"
)

# --- BANCOS DE DADOS SIMULADOS ---

# Habilidades da BNCC
bncc_database = {
    "1¬∫ Ano - Ensino Fundamental": {
        "L√≠ngua Portuguesa": [
            {"codigo": "EF01LP02", "descricao": "Escrever, espontaneamente ou por ditado, palavras e frases de forma alfab√©tica.", "tags": ["escrita", "alfabetizacao"]},
            {"codigo": "EF01LP05", "descricao": "Reconhecer o sistema de escrita alfab√©tica como representa√ß√£o dos sons da fala.", "tags": ["leitura", "consciencia fonologica"]},
        ],
        "Matem√°tica": [
            {"codigo": "EF01MA01", "descricao": "Utilizar n√∫meros naturais como indicador de quantidade ou de ordem em diferentes situa√ß√µes cotidianas.", "tags": ["numeros", "contagem"]},
            {"codigo": "EF01MA06", "descricao": "Construir fatos b√°sicos da adi√ß√£o e utiliz√°-los em procedimentos de c√°lculo para resolver problemas.", "tags": ["calculo", "soma", "problemas"]},
        ]
    },
    "2¬∫ Ano - Ensino Fundamental": {
        "L√≠ngua Portuguesa": [
            {"codigo": "EF12LP01", "descricao": "Ler palavras novas com precis√£o na decodifica√ß√£o, no caso de palavras de uso frequente, ler globalmente, por memoriza√ß√£o.", "tags": ["leitura", "decodificacao"]},
        ],
        "Matem√°tica": [
             {"codigo": "EF02MA06", "descricao": "Resolver e elaborar problemas de adi√ß√£o e de subtra√ß√£o, envolvendo n√∫meros de at√© tr√™s ordens, com os significados de juntar, acrescentar, separar, retirar.", "tags": ["calculo", "soma", "subtracao", "problemas"]}
        ]
    }
}

# Estrat√©gias de Interven√ß√£o (Inspirado nos materiais de refer√™ncia)
estrategias_database = {
    "Dislexia / Dificuldades de Leitura": [
        "Utilizar textos com fontes maiores e maior espa√ßamento (ex: OpenDyslexic).",
        "Trabalhar a consci√™ncia fonol√≥gica com jogos de rimas e alitera√ß√£o.",
        "Usar marcadores de texto ou r√©guas de leitura para guiar os olhos.",
        "Oferecer audiolivros ou softwares de leitura de tela como apoio.",
        "M√©todo f√¥nico: Focar na rela√ß√£o entre letras e sons de forma expl√≠cita."
    ],
    "Discalculia / Dificuldades de Matem√°tica": [
        "Usar materiais concretos (blocos, √°baco, material dourado) para representar n√∫meros e opera√ß√µes.",
        "Dividir problemas matem√°ticos complexos em etapas menores.",
        "Utilizar papel quadriculado para alinhar n√∫meros em c√°lculos.",
        "Ensinar o uso de calculadora para tarefas complexas, focando no racioc√≠nio do problema.",
        "Jogos de tabuleiro que envolvam contagem e c√°lculo."
    ],
    "TDAH / D√©ficit de Aten√ß√£o": [
        "Dividir tarefas longas em blocos de tempo menores (T√©cnica Pomodoro).",
        "Oferecer instru√ß√µes claras, curtas e em etapas (uma de cada vez).",
        "Permitir pausas para movimento e atividades motoras curtas.",
        "Usar checklists e organizadores visuais para guiar a execu√ß√£o de tarefas.",
        "Reduzir distra√ß√µes no ambiente (visuais e sonoras)."
    ]
}


# --- MENU LATERAL DE NAVEGA√á√ÉO ---
st.sidebar.title("MENU DE FERRAMENTAS")
pagina_selecionada = st.sidebar.radio(
    "Navegue pelos M√≥dulos:",
    ["P√°gina Inicial", "Perfil do Aluno (Anamnese)", "Plano de Ensino Individualizado (PEI)", "Planejador de Sess√£o"]
)
st.sidebar.markdown("---")
st.sidebar.info("Este aplicativo foi concebido pela INTERVEN√á√ÉO IA para apoiar profissionais da educa√ß√£o e sa√∫de.")


# --- CONTE√öDO DAS P√ÅGINAS ---

# P√ÅGINA INICIAL
if pagina_selecionada == "P√°gina Inicial":
    st.title("üß† Bem-vinda √† INTERVEN√á√ÉO IA!")
    st.subheader("Seu assistente psicopedag√≥gico para adapta√ß√£o curricular")
    st.markdown("---")
    st.markdown(
        """
        Este √© o seu painel de controle para criar, adaptar e planejar interven√ß√µes pedag√≥gicas eficazes.
        
        **Use o menu √† esquerda para navegar entre as ferramentas:**

        * **Perfil do Aluno (Anamnese):** Registre e organize as informa√ß√µes essenciais de seus alunos.
        * **Plano de Ensino Individualizado (PEI):** Crie metas alinhadas √† BNCC e descubra estrat√©gias de interven√ß√£o.
        * **Planejador de Sess√£o:** Estruture suas sess√µes de atendimento de forma r√°pida e objetiva.

        Estamos em constante desenvolvimento para trazer as melhores pr√°ticas baseadas em evid√™ncias para o seu dia a dia.
        """
    )

# P√ÅGINA DE ANAMNESE
elif pagina_selecionada == "Perfil do Aluno (Anamnese)":
    st.header("üë§ Perfil do Aluno (Anamnese)")
    st.info("Registre aqui as informa√ß√µes essenciais para um planejamento individualizado.")

    with st.form("form_anamnese"):
        st.subheader("Dados de Identifica√ß√£o")
        nome_aluno = st.text_input("Nome Completo do Aluno")
        data_nascimento = st.date_input("Data de Nascimento")
        
        st.subheader("Informa√ß√µes Relevantes")
        diagnostico = st.text_input("Diagn√≥stico / Hip√≥tese Diagn√≥stica")
        queixa_principal = st.text_area("Queixa Principal (relatada pela fam√≠lia/escola)")
        
        col1, col2 = st.columns(2)
        with col1:
            pontos_fortes = st.text_area("Potencialidades e Pontos Fortes")
        with col2:
            dificuldades = st.text_area("Desafios e Pontos de Aten√ß√£o")
            
        submitted = st.form_submit_button("Salvar Informa√ß√µes")
        if submitted:
            st.success(f"Informa√ß√µes de {nome_aluno} salvas com sucesso! (Funcionalidade de exibi√ß√£o)")
            # Em uma vers√£o futura, isso seria salvo em um banco de dados
            st.balloons()


# P√ÅGINA DO PEI
elif pagina_selecionada == "Plano de Ensino Individualizado (PEI)":
    st.header("üìù Plano de Ensino Individualizado (PEI)")
    
    tab1, tab2 = st.tabs(["üéØ Sele√ß√£o de Habilidades (BNCC)", "üí° Banco de Estrat√©gias de Interven√ß√£o"])

    with tab1:
        st.subheader("Sugest√£o de Habilidades para o PEI")
        col1, col2 = st.columns(2)
        with col1:
            ano_selecionado = st.selectbox("Ano Escolar:", options=list(bncc_database.keys()))
            disciplina_selecionada = st.selectbox("Disciplina:", options=list(bncc_database[ano_selecionado].keys()))
        with col2:
            palavras_chave_input = st.text_input("Dificuldades (separadas por v√≠rgula):", placeholder="Ex: leitura, calculo")

        if st.button("Buscar Habilidades"):
            if palavras_chave_input:
                # L√≥gica da busca
                sugestoes = []
                palavras_chave_lista = [p.strip().lower() for p in palavras_chave_input.split(',')]
                for hab in bncc_database[ano_selecionado][disciplina_selecionada]:
                    if any(tag in palavras_chave_lista for tag in hab["tags"]):
                        sugestoes.append(hab)

                st.subheader("‚úÖ Habilidades Recomendadas:")
                if sugestoes:
                    for s in sugestoes:
                        st.success(f"**C√≥digo:** {s['codigo']}\n\n**Descri√ß√£o:** {s['descricao']}")
                else:
                    st.warning("Nenhuma habilidade encontrada.")
            else:
                st.error("Por favor, informe as dificuldades.")
    
    with tab2:
        st.subheader("Sugest√£o de Estrat√©gias e Adapta√ß√µes")
        st.info("Selecione a √°rea de dificuldade para ver estrat√©gias baseadas em evid√™ncias.")
        
        dificuldade_estrategia = st.selectbox(
            "Selecione a √°rea de dificuldade principal:",
            options=list(estrategias_database.keys())
        )
        
        st.markdown("#### Estrat√©gias Sugeridas:")
        for estrategia in estrategias_database[dificuldade_estrategia]:
            st.markdown(f"- {estrategia}")

# P√ÅGINA DO PLANEJADOR DE SESS√ÉO
elif pagina_selecionada == "Planejador de Sess√£o":
    st.header("üóìÔ∏è Planejador de Sess√£o")
    st.info("Estruture sua sess√£o de interven√ß√£o de forma r√°pida e pr√°tica.")

    with st.container(border=True):
        data_sessao = st.date_input("Data da Sess√£o")
        objetivo_sessao = st.text_input("Objetivo Principal da Sess√£o:", placeholder="Ex: Desenvolver a consci√™ncia sil√°bica de palavras diss√≠labas.")
        materiais_necessarios = st.text_area("Materiais Necess√°rios:", placeholder="Ex: Fichas com imagens, letras m√≥veis, quadro branco.")
        
        st.markdown("##### Procedimento / Etapas da Sess√£o")
        etapa1 = st.text_input("1. Acolhimento / Atividade Inicial (Rapport):")
        etapa2 = st.text_input("2. Atividade Principal:")
        etapa3 = st.text_input("3. Atividade de Encerramento / Relaxamento:")
        
        observacoes = st.text_area("Observa√ß√µes e An√°lise do Desempenho:")

        if st.button("Gerar Plano de Sess√£o para Impress√£o"):
            st.success("Plano de sess√£o gerado!")
            # Em uma vers√£o futura, isso geraria um PDF para download.
            st.balloons()
