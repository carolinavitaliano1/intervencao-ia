# app.py
import streamlit as st

# --- IMPORTA√á√ÉO DOS DADOS MODULARIZADOS ---
from bncc_infantil import INFANTIL_DB
from bncc_fundamental import FUNDAMENTAL_DB
from bncc_medio import MEDIO_DB

# --- MONTAGEM DO BANCO DE DADOS PRINCIPAL ---
BNCC_DATABASE = {
    "Educa√ß√£o Infantil": INFANTIL_DB,
    "Ensino Fundamental": FUNDAMENTAL_DB,
    "Ensino M√©dio": MEDIO_DB
}

# --- CONFIGURA√á√ÉO DA P√ÅGINA ---
st.set_page_config(
    layout="wide",
    page_title="INTERVEN√á√ÉO IA 5.0",
    page_icon="üß†"
)

# --- BANCOS DE DADOS ADICIONAIS ---
estrategias_por_funcao = {
    "Aten√ß√£o Sustentada": ["Dividir tarefas longas em blocos menores com pausas programadas (T√©cnica Pomodoro).", "Usar timers visuais (ex: ampulhetas de tempo) para marcar a dura√ß√£o da tarefa.", "Reduzir est√≠mulos distratores no ambiente (visuais e sonoros).", "Utilizar o 'sussurrofone' para a crian√ßa ouvir a pr√≥pria voz durante a leitura, mantendo o foco."],
    "Mem√≥ria de Trabalho (Operacional)": ["Fornecer instru√ß√µes em etapas, uma de cada vez (verbalmente e por escrito/desenho).", "Ensinar o uso de checklists e organizadores gr√°ficos para sequenciar tarefas.", "Praticar jogos de memoriza√ß√£o (ex: Jogo da Mem√≥ria, 'O que mudou na sala?').", "Reduzir a carga de memoriza√ß√£o durante c√°lculos, permitindo o uso de tabuadas de apoio ou calculadora para focar no racioc√≠nio."],
    "Controle Inibit√≥rio": ["Utilizar sinais visuais ou verbais combinados para 'Pare e Pense' antes de responder.", "Praticar jogos que exigem espera e troca de turno (ex: jogos de tabuleiro, 'est√°tua').", "Estabelecer rotinas claras e previs√≠veis com quadros de rotina visuais.", "Antecipar mudan√ßas na rotina para diminuir a impulsividade e a ansiedade."],
    "Flexibilidade Cognitiva": ["Jogos que exigem mudan√ßa de regras no meio da partida (ex: 'Uno' com regras inventadas).", "Apresentar o mesmo problema com diferentes formas de resolu√ß√£o.", "Criar hist√≥rias com finais alternativos.", "Incentivar o 'brainstorming' de ideias sem julgamento inicial."],
    "Processamento Fonol√≥gico": ["Atividades l√∫dicas com rimas, alitera√ß√µes e segmenta√ß√£o de s√≠labas/fonemas.", "Utilizar o m√©todo f√¥nico multissensorial (letras texturizadas, tra√ßado no ar/areia).", "Jogos de 'bingo de sons' ou 'qual palavra come√ßa com o som /f/?'.", "Uso de softwares e aplicativos focados em consci√™ncia fonol√≥gica."],
    "Processamento Visoespacial": ["Utilizar papel quadriculado para alinhar n√∫meros e letras.", "Montagem de quebra-cabe√ßas e LEGO seguindo modelos.", "Jogos de labirinto e 'encontre os 7 erros'.", "Destacar linhas ou usar r√©guas de leitura para evitar pular linhas durante a leitura."]
}


# --- MENU LATERAL DE NAVEGA√á√ÉO ---
with st.sidebar:
    st.title("üß† INTERVEN√á√ÉO IA 5.0")
    st.caption("Vers√£o Modular")
    pagina_selecionada = st.radio(
        "Navegue pelos M√≥dulos:",
        ["P√°gina Inicial", "Anamnese Aprofundada", "Plano de Ensino Individualizado (PEI)", "Gerador de Atividades Adaptadas", "Modelo RTI (Resposta √† Interven√ß√£o)", "Base de Conhecimento"],
        captions=["Vis√£o geral", "Registre informa√ß√µes do aluno", "Crie metas e estrat√©gias", "Adapte materiais pedag√≥gicos", "Planeje a interven√ß√£o em camadas", "Consulte conceitos-chave"]
    )
    st.sidebar.markdown("---")
    st.info("Uma ferramenta especialista para uma educa√ß√£o inclusiva e baseada em evid√™ncias.")


# --- L√ìGICA DAS P√ÅGINAS ---

if pagina_selecionada == "P√°gina Inicial":
    st.title("Bem-vinda √† Vers√£o 5.0 da INTERVEN√á√ÉO IA!")
    st.subheader("Plataforma com estrutura de c√≥digo profissional e modular.")
    st.markdown("---")
    st.success("Estrutura Aprimorada! Atendendo √† sua sugest√£o, o c√≥digo da BNCC foi dividido em arquivos separados por etapa de ensino, tornando o aplicativo mais organizado e eficiente.", icon="‚öôÔ∏è")
    st.markdown("""
        **Navegue pelo menu √† esquerda para acessar as ferramentas:**
        - **Anamnese Aprofundada:** Um guia estruturado para coletar informa√ß√µes cruciais.
        - **PEI com Intelig√™ncia Cl√≠nica:** Com a BNCC completa e modularizada, crie metas precisas e descubra estrat√©gias.
        - **Gerador de Atividades Adaptadas:** Crie materiais acess√≠veis com base nos princ√≠pios do DUA.
        - **Modelo RTI:** Planeje suas interven√ß√µes de forma escalonada e sistem√°tica.
        - **Base de Conhecimento:** Revise conceitos fundamentais a qualquer momento.
    """)

elif pagina_selecionada == "Plano de Ensino Individualizado (PEI)":
    st.header("üìù Plano de Ensino Individualizado (PEI)")
    st.info("Utilize a base de dados completa da BNCC para fundamentar seu planejamento.")
    
    tab1, tab2 = st.tabs(["üéØ **Navegador da BNCC**", "üí° **Banco de Estrat√©gias Cl√≠nicas**"])

    with tab1:
        etapa_ensino = st.selectbox(
            "1. Selecione a Etapa de Ensino:",
            options=list(BNCC_DATABASE.keys())
        )

        if etapa_ensino == "Educa√ß√£o Infantil":
            grupo_etario = st.selectbox("2. Selecione o Grupo Et√°rio:", options=list(BNCC_DATABASE["Educa√ß√£o Infantil"].keys()))
            campo_exp = st.selectbox("3. Selecione o Campo de Experi√™ncia:", options=list(BNCC_DATABASE["Educa√ß√£o Infantil"][grupo_etario].keys()))
            
            if st.button("Ver Objetivos de Aprendizagem"):
                st.subheader(f"‚úÖ Objetivos para: {grupo_etario} / {campo_exp}")
                # AQUI A CORRE√á√ÉO: Mostra todos os objetivos da lista, como voc√™ pediu.
                for obj in BNCC_DATABASE["Educa√ß√£o Infantil"][grupo_etario][campo_exp]:
                    st.success(f"**C√≥digo:** {obj['codigo']}\n\n**Descri√ß√£o:** {obj['descricao']}")

        elif etapa_ensino == "Ensino Fundamental":
            ano_escolar = st.selectbox("2. Selecione o Ano Escolar:", options=list(BNCC_DATABASE["Ensino Fundamental"].keys()))
            componente = st.selectbox("3. Selecione o Componente Curricular:", options=list(BNCC_DATABASE["Ensino Fundamental"][ano_escolar].keys()))
            
            if st.button("Ver Habilidades"):
                st.subheader(f"‚úÖ Habilidades para: {ano_escolar} / {componente}")
                for hab in BNCC_DATABASE["Ensino Fundamental"][ano_escolar][componente]:
                    st.success(f"**C√≥digo:** {hab['codigo']}\n\n**Descri√ß√£o:** {hab['descricao']}")
        
        elif etapa_ensino == "Ensino M√©dio":
            st.selectbox("2. Selecione o Ano (para refer√™ncia):", ["1¬∫ Ano", "2¬∫ Ano", "3¬∫ Ano"])
            area_conhecimento = st.selectbox("3. Selecione a √Årea de Conhecimento:", options=list(BNCC_DATABASE["Ensino M√©dio"].keys()))

            if st.button("Ver Compet√™ncias e Habilidades"):
                dados_area = BNCC_DATABASE["Ensino M√©dio"][area_conhecimento]
                st.subheader(f"‚úÖ Compet√™ncias Espec√≠ficas de {area_conhecimento}")
                with st.container(border=True):
                    for comp in dados_area["Compet√™ncias Espec√≠ficas"]:
                        st.markdown(f"**Compet√™ncia {comp['codigo']}:** {comp['descricao']}")
                st.subheader(f"‚úÖ Habilidades de {area_conhecimento}")
                for hab in dados_area["Habilidades"]:
                    st.success(f"**C√≥digo:** {hab['codigo']}\n\n**Descri√ß√£o:** {hab['descricao']}")

    with tab2:
        st.subheader("Sugest√£o de Estrat√©gias por Fun√ß√£o Cognitiva")
        funcao_selecionada = st.selectbox("Selecione a fun√ß√£o cognitiva a ser estimulada:", options=list(estrategias_por_funcao.keys()))
        st.markdown(f"#### Estrat√©gias para **{funcao_selecionada}**:")
        with st.container(border=True):
            for estrategia in estrategias_por_funcao[funcao_selecionada]:
                st.markdown(f"- {estrategia}")

# O RESTANTE DO C√ìDIGO DAS OUTRAS P√ÅGINAS PERMANECE O MESMO
elif pagina_selecionada == "Anamnese Aprofundada":
    st.header("üë§ Anamnese Aprofundada")
    with st.form("form_anamnese_avancado"):
        st.text_input("Nome Completo do Aluno")
        with st.expander("Dados de Identifica√ß√£o e Hist√≥rico"):
            st.date_input("Data de Nascimento"); st.text_input("Escola"); st.text_input("Ano Escolar"); st.text_area("Queixa Principal (relatada pela fam√≠lia/escola)")
        with st.expander("Avalia√ß√£o de Fun√ß√µes e Habilidades (Observa√ß√£o Cl√≠nica)"):
            st.multiselect("Aten√ß√£o", ["Sustentada", "Dividida", "Seletiva"]); st.multiselect("Mem√≥ria de Trabalho", ["Baixa capacidade", "Dificuldade em manipular informa√ß√µes"]); st.multiselect("Flexibilidade Cognitiva", ["Rigidez", "Dificuldade em mudar de estrat√©gia"])
            st.multiselect("Habilidades Lingu√≠sticas", ["Atraso na fala", "Dificuldade de compreens√£o", "Vocabul√°rio restrito", "Dificuldades na narrativa"])
            st.multiselect("Coordena√ß√£o Motora", ["Fina (dificuldade em escrever/desenhar)", "Ampla (desajeitado, dificuldade em esportes)"])
        with st.expander("Potencialidades e Interesses"):
            st.text_area("Descreva os pontos fortes, talentos e √°reas de grande interesse do aluno.", height=100)
        if st.form_submit_button("Salvar Anamnese"): st.success("Anamnese salva com sucesso!")

elif pagina_selecionada == "Gerador de Atividades Adaptadas":
    st.header("üé® Gerador de Atividades Adaptadas (Avan√ßado)")
    col1, col2 = st.columns(2)
    with col1:
        st.subheader("Atividade Original"); enunciado_original = st.text_area("Enunciado Original:", "Resolva os problemas de matem√°tica com aten√ß√£o."); atividade_original = st.text_area("Conte√∫do da Atividade:", "1. Maria tinha 5 ma√ß√£s e comprou mais 3. Com quantas ela ficou?\n2. Jo√£o tinha 10 laranjas e deu 4 para seu amigo. Com quantas ele ficou?")
    with col2:
        st.subheader("Aplicar Adapta√ß√µes"); adapt_fonte = st.checkbox("Sugerir fonte ampliada e maior espa√ßamento."); adapt_vocabulario = st.checkbox("Simplificar vocabul√°rio do enunciado."); adapt_quantidade = st.checkbox("Reduzir a quantidade de quest√µes pela metade."); adapt_passos = st.checkbox("Sugerir a quebra de problemas em etapas."); adapt_resposta = st.checkbox("Sugerir formas de resposta alternativas (oral, desenho, m√∫ltipla escolha).")
    if st.button("Gerar Pr√©-visualiza√ß√£o Adaptada"):
        st.subheader("‚úÖ Pr√©-visualiza√ß√£o da Atividade Adaptada")
        with st.container(border=True):
            enunciado_adaptado = "Vamos calcular! Resolva as continhas abaixo." if adapt_vocabulario else enunciado_original
            st.markdown(f"**Enunciado:** {enunciado_adaptado}")
            questoes = atividade_original.split('\n')
            if adapt_quantidade: questoes = questoes[:len(questoes)//2] if len(questoes) > 1 else questoes
            for q in questoes: st.write(q)
            st.markdown("---"); st.markdown("**Recomenda√ß√µes para Aplica√ß√£o:**")
            if adapt_fonte: st.write("- Imprimir com fonte 20pt e espa√ßamento 1.5 entre linhas.")
            if adapt_passos: st.write("- Para cada problema, oriente o aluno a seguir as etapas: ler, desenhar, montar a conta, responder.")
            if adapt_resposta: st.write("- Permita que o aluno responda oralmente ou desenhando, caso tenha dificuldades na escrita.")

elif pagina_selecionada == "Modelo RTI (Resposta √† Interven√ß√£o)":
    st.header("üìä Modelo RTI (Resposta √† Interven√ß√£o)"); st.text_area("N√≠vel 1: Interven√ß√£o Universal (Toda a Turma)", key="rti1"); st.text_area("N√≠vel 2: Interven√ß√£o em Pequeno Grupo (Alunos em Risco)", key="rti2"); st.text_area("N√≠vel 3: Interven√ß√£o Individualizada e Intensiva", key="rti3"); st.button("Salvar Plano RTI")

elif pagina_selecionada == "Base de Conhecimento":
    st.header("üìö Base de Conhecimento")
    with st.expander("üß† O que s√£o Fun√ß√µes Executivas?"): st.markdown("S√£o um conjunto de habilidades mentais que nos permitem controlar e autorregular nossos pensamentos, emo√ß√µes e a√ß√µes. Componentes: Mem√≥ria de Trabalho, Controle Inibit√≥rio e Flexibilidade Cognitiva.")
    with st.expander("üó£Ô∏è O que √© Consci√™ncia Fonol√≥gica?"): st.markdown("√â a habilidade de perceber e manipular os sons da fala, sem envolver letras. Inclui rimas, s√≠labas e fonemas. Dificuldades nesta √°rea s√£o um forte preditor de dislexia.")
    with st.expander("üî¢ O que √© Senso Num√©rico?"): st.markdown("√â uma compreens√£o intuitiva dos n√∫meros, sua magnitude e suas rela√ß√µes. √â a base para o aprendizado matem√°tico. Crian√ßas com baixo senso num√©rico precisam de atividades com materiais concretos.")
